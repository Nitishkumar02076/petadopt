{"ast":null,"code":"var _jsxFileName = \"D:\\\\pet_adopt\\\\Client\\\\src\\\\Components\\\\Pets\\\\Pets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PetsViewer from \"./PetsViewer\";\nimport { useAuthContext } from \"../../hooks/UseAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Pets = () => {\n  _s();\n  const [filter, setFilter] = useState(\"all\");\n  const [petsData, setPetsData] = useState([]); // Ensures petsData starts as an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const fetchRequests = async () => {\n      if (!user || !user.token) {\n        setError(\"User is not authenticated\");\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(\"http://localhost:4000/approvedPets\", {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch pets data\");\n        }\n        const data = await response.json();\n\n        // Ensure the fetched data is an array\n        setPetsData(Array.isArray(data) ? data : []);\n        setError(null);\n      } catch (error) {\n        console.error(\"Error fetching pets data:\", error);\n        setError(\"An error occurred while fetching the data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRequests();\n  }, [user]);\n\n  // Safely filter petsData only if it's an array\n  const filteredPets = (Array.isArray(petsData) ? petsData : []).filter(pet => filter === \"all\" ? true : pet.type === filter);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: event => setFilter(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Pets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Dog\",\n          children: \"Dogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Cat\",\n          children: \"Cats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Rabbit\",\n          children: \"Rabbits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Bird\",\n          children: \"Birds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fish\",\n          children: \"Fish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : filteredPets.length > 0 ? filteredPets.map((petDetail, index) => /*#__PURE__*/_jsxDEV(PetsViewer, {\n        pet: petDetail\n      }, petDetail.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"oops-msg\",\n        children: \"Oops!... No pets available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Pets, \"RIeW6T0zka5DMiNadf4QU0nmOa4=\", false, function () {\n  return [useAuthContext];\n});\n_c = Pets;\nexport default Pets;\nvar _c;\n$RefreshReg$(_c, \"Pets\");","map":{"version":3,"names":["React","useEffect","useState","PetsViewer","useAuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Pets","_s","filter","setFilter","petsData","setPetsData","loading","setLoading","error","setError","user","fetchRequests","token","response","fetch","headers","Authorization","ok","Error","data","json","Array","isArray","console","filteredPets","pet","type","children","className","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","petDetail","index","id","_c","$RefreshReg$"],"sources":["D:/pet_adopt/Client/src/Components/Pets/Pets.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PetsViewer from \"./PetsViewer\";\nimport { useAuthContext } from \"../../hooks/UseAuthContext\";\n\nconst Pets = () => {\n  const [filter, setFilter] = useState(\"all\");\n  const [petsData, setPetsData] = useState([]); // Ensures petsData starts as an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { user } = useAuthContext();\n\n  useEffect(() => {\n    const fetchRequests = async () => {\n      if (!user || !user.token) {\n        setError(\"User is not authenticated\");\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(\"http://localhost:4000/approvedPets\", {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch pets data\");\n        }\n        const data = await response.json();\n        \n        // Ensure the fetched data is an array\n        setPetsData(Array.isArray(data) ? data : []);\n        setError(null);\n      } catch (error) {\n        console.error(\"Error fetching pets data:\", error);\n        setError(\"An error occurred while fetching the data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRequests();\n  }, [user]);\n\n  // Safely filter petsData only if it's an array\n  const filteredPets = (Array.isArray(petsData) ? petsData : []).filter((pet) =>\n    filter === \"all\" ? true : pet.type === filter\n  );\n\n  return (\n    <>\n      <div className=\"filter-selection\">\n        <select value={filter} onChange={(event) => setFilter(event.target.value)}>\n          <option value=\"all\">All Pets</option>\n          <option value=\"Dog\">Dogs</option>\n          <option value=\"Cat\">Cats</option>\n          <option value=\"Rabbit\">Rabbits</option>\n          <option value=\"Bird\">Birds</option>\n          <option value=\"Fish\">Fish</option>\n          <option value=\"Other\">Other</option>\n        </select>\n      </div>\n\n      <div className=\"pet-container\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p className=\"error-message\">{error}</p>\n        ) : filteredPets.length > 0 ? (\n          filteredPets.map((petDetail, index) => (\n            <PetsViewer pet={petDetail} key={petDetail.id || index} />\n          ))\n        ) : (\n          <p className=\"oops-msg\">Oops!... No pets available</p>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Pets;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEiB;EAAK,CAAC,GAAGf,cAAc,CAAC,CAAC;EAEjCH,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI,CAACD,IAAI,IAAI,CAACA,IAAI,CAACE,KAAK,EAAE;QACxBH,QAAQ,CAAC,2BAA2B,CAAC;QACrCF,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MACA,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,IAAI,CAACE,KAAM;UACtC;QACF,CAAC,CAAC;QACF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC9C;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;;QAElC;QACAf,WAAW,CAACgB,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;QAC5CV,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACde,OAAO,CAACf,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,2CAA2C,CAAC;MACvD,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMc,YAAY,GAAG,CAACH,KAAK,CAACC,OAAO,CAAClB,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE,EAAEF,MAAM,CAAEuB,GAAG,IACxEvB,MAAM,KAAK,KAAK,GAAG,IAAI,GAAGuB,GAAG,CAACC,IAAI,KAAKxB,MACzC,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA;MAAK+B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/B9B,OAAA;QAAQgC,KAAK,EAAE3B,MAAO;QAAC4B,QAAQ,EAAGC,KAAK,IAAK5B,SAAS,CAAC4B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAF,QAAA,gBACxE9B,OAAA;UAAQgC,KAAK,EAAC,KAAK;UAAAF,QAAA,EAAC;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrCvC,OAAA;UAAQgC,KAAK,EAAC,KAAK;UAAAF,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjCvC,OAAA;UAAQgC,KAAK,EAAC,KAAK;UAAAF,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjCvC,OAAA;UAAQgC,KAAK,EAAC,QAAQ;UAAAF,QAAA,EAAC;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCvC,OAAA;UAAQgC,KAAK,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCvC,OAAA;UAAQgC,KAAK,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCvC,OAAA;UAAQgC,KAAK,EAAC,OAAO;UAAAF,QAAA,EAAC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENvC,OAAA;MAAK+B,SAAS,EAAC,eAAe;MAAAD,QAAA,EAC3BrB,OAAO,gBACNT,OAAA;QAAA8B,QAAA,EAAG;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACf5B,KAAK,gBACPX,OAAA;QAAG+B,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAEnB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GACtCZ,YAAY,CAACa,MAAM,GAAG,CAAC,GACzBb,YAAY,CAACc,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAChC3C,OAAA,CAACH,UAAU;QAAC+B,GAAG,EAAEc;MAAU,GAAMA,SAAS,CAACE,EAAE,IAAID,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC1D,CAAC,gBAEFvC,OAAA;QAAG+B,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAA0B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACnC,EAAA,CAzEID,IAAI;EAAA,QAKSL,cAAc;AAAA;AAAA+C,EAAA,GAL3B1C,IAAI;AA2EV,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}