{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './UseAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [signupError, setSignupError] = useState(null);\n  const [signupIsLoading, setSignupIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (name, email, password, otp) => {\n    setSignupIsLoading(true);\n    setSignupError(null);\n    try {\n      const otpResponse = await fetch('http://localhost:4000/api/verifyotp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      const jsonOtp = await otpResponse.json();\n      if (!otpResponse.ok) {\n        setSignupIsLoading(false);\n        setSignupError(jsonOtp.error || 'OTP verification failed. Please try again.');\n      } else {\n        const response = await fetch('http://localhost:4000/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password\n          })\n        });\n        const json = await response.json();\n        if (!response.ok) {\n          setSignupIsLoading(false);\n          setSignupError(json.error || 'Something went wrong. Please try again.');\n        } else {\n          localStorage.setItem('user', JSON.stringify(json));\n          dispatch({\n            type: 'LOGIN',\n            payload: json\n          });\n          setSignupIsLoading(false);\n          setSignupError(null);\n        }\n      }\n    } catch (error) {\n      setSignupIsLoading(false);\n      setSignupError('Network error. Please try again.');\n    }\n  };\n  return {\n    signup,\n    signupIsLoading,\n    signupError,\n    setSignupError\n  };\n};\n_s(useSignup, \"XMf6UUiAi2WmOTqv3x3t2QWMKxk=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","signupError","setSignupError","signupIsLoading","setSignupIsLoading","dispatch","signup","name","email","password","otp","otpResponse","fetch","method","headers","body","JSON","stringify","jsonOtp","json","ok","error","response","localStorage","setItem","type","payload"],"sources":["D:/pet_adopt/Client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthContext } from './UseAuthContext';\n\nexport const useSignup = () => {\n  const [signupError, setSignupError] = useState(null);\n  const [signupIsLoading, setSignupIsLoading] = useState(false);\n  const { dispatch } = useAuthContext();\n\n  const signup = async (name, email, password, otp) => {\n    setSignupIsLoading(true);\n    setSignupError(null);\n\n    try {\n      const otpResponse = await fetch('http://localhost:4000/api/verifyotp', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, otp }),\n      })\n\n      const jsonOtp = await otpResponse.json();\n      if (!otpResponse.ok) {\n        setSignupIsLoading(false);\n        setSignupError(jsonOtp.error || 'OTP verification failed. Please try again.');\n      } else {\n        const response = await fetch('http://localhost:4000/signup', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name, email, password }),\n        });\n\n        const json = await response.json();\n\n        if (!response.ok) {\n          setSignupIsLoading(false);\n          setSignupError(json.error || 'Something went wrong. Please try again.');\n        } else {\n          localStorage.setItem('user', JSON.stringify(json));\n\n          dispatch({ type: 'LOGIN', payload: json });\n\n          setSignupIsLoading(false);\n          setSignupError(null);\n        }\n      }\n    } catch (error) {\n      setSignupIsLoading(false);\n      setSignupError('Network error. Please try again.');\n    }\n  };\n\n  return { signup, signupIsLoading, signupError, setSignupError };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,GAAG,KAAK;IACnDN,kBAAkB,CAAC,IAAI,CAAC;IACxBF,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF,MAAMS,WAAW,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,KAAK;UAAEE;QAAI,CAAC;MACrC,CAAC,CAAC;MAEF,MAAMQ,OAAO,GAAG,MAAMP,WAAW,CAACQ,IAAI,CAAC,CAAC;MACxC,IAAI,CAACR,WAAW,CAACS,EAAE,EAAE;QACnBhB,kBAAkB,CAAC,KAAK,CAAC;QACzBF,cAAc,CAACgB,OAAO,CAACG,KAAK,IAAI,4CAA4C,CAAC;MAC/E,CAAC,MAAM;QACL,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,IAAI;YAAEC,KAAK;YAAEC;UAAS,CAAC;QAChD,CAAC,CAAC;QAEF,MAAMU,IAAI,GAAG,MAAMG,QAAQ,CAACH,IAAI,CAAC,CAAC;QAElC,IAAI,CAACG,QAAQ,CAACF,EAAE,EAAE;UAChBhB,kBAAkB,CAAC,KAAK,CAAC;UACzBF,cAAc,CAACiB,IAAI,CAACE,KAAK,IAAI,yCAAyC,CAAC;QACzE,CAAC,MAAM;UACLE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;UAElDd,QAAQ,CAAC;YAAEoB,IAAI,EAAE,OAAO;YAAEC,OAAO,EAAEP;UAAK,CAAC,CAAC;UAE1Cf,kBAAkB,CAAC,KAAK,CAAC;UACzBF,cAAc,CAAC,IAAI,CAAC;QACtB;MACF;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdjB,kBAAkB,CAAC,KAAK,CAAC;MACzBF,cAAc,CAAC,kCAAkC,CAAC;IACpD;EACF,CAAC;EAED,OAAO;IAAEI,MAAM;IAAEH,eAAe;IAAEF,WAAW;IAAEC;EAAe,CAAC;AACjE,CAAC;AAACF,EAAA,CAhDWD,SAAS;EAAA,QAGCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}